

test Get
    assert LEN({:}) == 0
    assert LEN({'a': 33}) == 1

    assert REPR({'a': 33}) == '{"a": 33}'

    map = {'a': 33}

    assert map['a'] == 33

    assert 'a' in map
    assert 'b' not in map
end

test SetKeys
    d = {
        {1, 2}: 'A',
        {2, 3}: 'B',
    }

    assert d == {{3, 2}: 'B', {2, 1}: 'A'}
    assert d[{1, 2}] == 'A'
    assert d[{2, 1}] == 'A'
    assert LEN(d) is 2

    d[{2, 1}] = 'C'
    assert d == {{2, 3}: 'B', {1, 2}: 'C'}
end

test ListKeys
    d = {
        [1, 2]: 'LIST1',
        [2, 1]: 'LIST2',
        {1, 2}: 'SET',
    }

    assert LEN(d) == 3
    assert STR(d) == '{[1, 2]: "LIST1", [2, 1]: "LIST2", {1, 2}: "SET"}'
    assert d[[1, 2]] == 'LIST1'
    assert d[[2, 1]] == 'LIST2'
end

test Add
    d = {:}
    ADD(d, ['key', 'val'])
    ADD(d, ['a', 10])

    assert d == {'a': 10, 'key': 'val'}
end

test MapKeys
    # Maps are nto considered hashable, so
    # trying to use them as keys throw an error
    assert throw { {1: 2}: 2 }
end
