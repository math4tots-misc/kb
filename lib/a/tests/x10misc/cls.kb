class Sample
    fn foo(self) = 10
    fn bar(self, x) = x + 123 + self->foo()
end

test Equality
    r###"
    Equality of objects are by identity
    "###

    sample1 = NEW(Sample)
    assert sample1 is sample1
    assert sample1 == sample1
    sample2 = NEW(Sample)
    assert sample2 is sample2
    assert sample2 == sample2
    assert sample1 is not sample2
    assert sample1 != sample2
end

test Methods
    sample = NEW(Sample)
    assert sample->foo() == 10
    assert sample->bar(6) == 139
end

test GetClass
    sample = NEW(Sample)
    assert CLASS(sample) is Sample
end

test Attrs
    sample = NEW(Sample)
    sample.x = 'asdfasdf'
    assert sample.x == 'asdfasdf'

    # Throw on attributes not found
    assert throw sample.y
end

test StaticAttrs
    Sample.some_attr = 'some attr'
    assert Sample.some_attr == 'some attr'

    assert throw Sample.does_not_exist
end

test Name
    assert NAME(Sample) == 'a.tests.x10misc.cls#Sample'
    assert EndsWith(NAME(Sample), '#Sample')

    assert NAME(METHOD(Sample, 'foo')) == 'a.tests.x10misc.cls#Sample->foo'
end

fn EndsWith(string, suffix)
    alen = LEN(string)
    blen = LEN(suffix)
    if alen < blen
        return false
    end
    for i = 0 .. blen
        if string[alen - blen + i] != suffix[i]
            return false
        end
    end
    return true
end
