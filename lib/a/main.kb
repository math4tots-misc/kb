import a.other

PRINT "Hello world!"

other.foo()

fn foo(a, x=22, *rest)
    PRINT ["foo", x, rest]
end

foo(2, 32, 1, 2, 3)
foo(4)
foo(4, 'hi')


DIM i = 0
DIM total = 0

10 if i < 100
    i = i + 1
    total = total + i
    GOTO 10
else
    PRINT '** Finishing loop **'
end

PRINT total
PRINT -25 % 19
PRINT -25 * 19
PRINT -25 - 19

i = 0
total = 0
while i < 1000
    i = i + 1
    total = total + i
end
PRINT total

fn* gen()
    yield 1
    yield 2 + 3
    yield 'hi'
end

DIM g = gen()
PRINT g
PRINT NEXT(g)
PRINT NEXT(g)
PRINT NEXT(g)
PRINT NEXT(g)

[a, b, [c, [d]]] = [1, 2, ['cc', ['ddd']]]
PRINT ['a', a, 'b', b, 'c=', c, 'd=', d]

aa = [xx, yy] = [1, 'hi']

PRINT ['aa=', aa, 'xx=', xx, 'yy=', yy]

FUNCTION F(A, B) = A + B
fn g(a, b) = a * b

PRINT ['F(12, 5)=', F(12, 5)]
PRINT ['g(12, 5)=', g(12, 5)]
